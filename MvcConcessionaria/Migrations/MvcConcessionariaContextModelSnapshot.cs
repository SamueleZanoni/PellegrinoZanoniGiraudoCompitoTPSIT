// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcConcessionaria.Data;

#nullable disable

namespace MvcConcessionaria.Migrations
{
    [DbContext(typeof(MvcConcessionariaContext))]
    partial class MvcConcessionariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MvcConcessionaria.Models.Concessionaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alimentazione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cavalli")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cilindrata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataDiRilascio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modello")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Concessionaria");
                });
#pragma warning restore 612, 618
        }
    }
}
